plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.kyn'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springAiVersion', "1.0.0-M6")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-rsocket'
	implementation 'org.springframework.ai:spring-ai-mcp-server-spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

// 인코딩 설정
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

// Gradle 실행 시 JVM 인코딩 설정
tasks.withType(JavaExec) {
	systemProperty "file.encoding", "UTF-8"
	systemProperty "console.encoding", "UTF-8"
	jvmArgs '-Dfile.encoding=UTF-8', '-Dconsole.encoding=UTF-8'
}

// 부트런 작업에 인코딩 설정 추가
bootRun {
	systemProperty "file.encoding", "UTF-8"
	systemProperty "console.encoding", "UTF-8"
	jvmArgs '-Dfile.encoding=UTF-8', '-Dconsole.encoding=UTF-8'
}
